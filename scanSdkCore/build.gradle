plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.scanner.scansdkcore'
    compileSdk 33

    defaultConfig {
        minSdk 21

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.22.1"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'androidx.test:rules:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //ScanSdkPublic
    api project(':scanSdkPublic')

    //CameraX
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    //Koin
    def koin_version = "3.2.0-beta-1"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    androidTestImplementation "io.insert-koin:koin-test-junit4:3.5.0"

    //OpenCv
    implementation project(':scanSdkCore:sdk')

    //test
    def testRunnerVersion = '1.4.0'
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    def espressoVersion = '3.4.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    def jUnitVersion = '4.13.2'
    testImplementation "junit:junit:$jUnitVersion"
    def mockitoCoreVersion = '3.6.0'
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoCoreVersion"
    def mockitoInlineVersion = '3.6.0'
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    def mockitoKotlinVersion = '2.2.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    def archCoreTestingVersion = '2.1.0'
    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    def striktVersion = '0.33.0'
    testImplementation "io.strikt:strikt-core:$striktVersion"
    def androidJodaVersion = '2.10.7.2'
    testImplementation "net.danlew:android.joda:$androidJodaVersion"

    def robolectric = '4.9'
    testImplementation "org.robolectric:robolectric:$robolectric"
}